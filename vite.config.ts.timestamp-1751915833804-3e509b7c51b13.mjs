// vite.config.ts
import { pluginUpdateReadmePD } from "file:///W:/git-library/jenesei-software/jenesei-ui-react/node_modules/@jenesei-software/jenesei-plugin-vite/build/main.es.js";
import react from "file:///W:/git-library/jenesei-software/jenesei-ui-react/node_modules/@vitejs/plugin-react/dist/index.mjs";
import path, { resolve } from "path";
import process from "process";
import { defineConfig } from "file:///W:/git-library/jenesei-software/jenesei-ui-react/node_modules/vite/dist/node/index.js";
import dts from "file:///W:/git-library/jenesei-software/jenesei-ui-react/node_modules/vite-plugin-dts/dist/index.mjs";
import tsconfigPaths from "file:///W:/git-library/jenesei-software/jenesei-ui-react/node_modules/vite-tsconfig-paths/dist/index.js";

// package.json
var peerDependencies = {
  "@emotion/styled": "^11.13.0",
  "@tanstack/react-router": ">=1.97.0",
  "@tanstack/react-virtual": "^3.10.8",
  "framer-motion": "^11.13.1",
  "js-cookie": "^3.0.5",
  leaflet: "^1.9.4",
  "leaflet.markercluster": "^1.5.3",
  moment: ">=2.30.1",
  react: ">=19.0.0",
  "react-dom": ">=19.0.0",
  "react-image-webp": "^0.8.0",
  "react-leaflet": "^5.0.0",
  "react-leaflet-markercluster": "^5.0.0-rc.0",
  "react-number-format": "^5.4.2",
  "styled-components": ">=6.0",
  "styled-reset": "^4.5.2",
  uuid: "^11.0.3"
};

// vite.config.ts
var __vite_injected_original_dirname = "W:\\git-library\\jenesei-software\\jenesei-ui-react";
var vite_config_default = defineConfig(() => {
  const isStorybook = process.env.NODE_ENV === "storybook";
  console.log("isStorybookBuild: ", String(isStorybook));
  return {
    resolve: {
      alias: {
        "@local": path.resolve(__vite_injected_original_dirname, "./src")
      }
    },
    plugins: [
      pluginUpdateReadmePD({
        insertionPoint: "# IMPORTANT",
        pathReadme: resolve(__vite_injected_original_dirname, "README.md"),
        pathPackageJson: resolve(__vite_injected_original_dirname, "package.json")
      }),
      react(),
      tsconfigPaths(),
      !isStorybook && dts({
        include: ["src/"],
        // exclude: ['src/declaration/styled-components.d.ts'],
        rollupTypes: true,
        insertTypesEntry: true,
        tsconfigPath: "./tsconfig.json"
      })
    ].filter(Boolean),
    publicDir: false,
    build: {
      sourcemap: true,
      outDir: "./build",
      rootDir: "./src",
      minify: "terser",
      lib: {
        entry: {
          index: resolve(__vite_injected_original_dirname, "src/index.ts"),
          ["style-theme"]: resolve(__vite_injected_original_dirname, "src/theme/index.ts"),
          ["style-add"]: resolve(__vite_injected_original_dirname, "src/styles/add/index.ts"),
          ["style-error"]: resolve(__vite_injected_original_dirname, "src/styles/error/index.ts"),
          ["style-sx"]: resolve(__vite_injected_original_dirname, "src/styles/sx/index.ts"),
          ["style-motion"]: resolve(__vite_injected_original_dirname, "src/styles/motion/index.ts"),
          ["types"]: resolve(__vite_injected_original_dirname, "src/types.ts"),
          ["functions"]: resolve(__vite_injected_original_dirname, "src/functions.ts"),
          ["consts"]: resolve(__vite_injected_original_dirname, "src/consts.ts"),
          ["component-range"]: resolve(__vite_injected_original_dirname, "src/components/range/index.ts"),
          ["component-accordion"]: resolve(__vite_injected_original_dirname, "src/components/accordion/index.ts"),
          ["component-button"]: resolve(__vite_injected_original_dirname, "src/components/button/index.ts"),
          ["component-button-group"]: resolve(__vite_injected_original_dirname, "src/components/button-group/index.ts"),
          ["component-checkbox"]: resolve(__vite_injected_original_dirname, "src/components/checkbox/index.ts"),
          ["component-checkbox-group"]: resolve(__vite_injected_original_dirname, "src/components/checkbox-group/index.ts"),
          ["component-date-picker"]: resolve(__vite_injected_original_dirname, "src/components/date-picker/index.ts"),
          ["component-icon"]: resolve(__vite_injected_original_dirname, "src/components/icon/index.ts"),
          ["component-image"]: resolve(__vite_injected_original_dirname, "src/components/image/index.ts"),
          ["component-image-select"]: resolve(__vite_injected_original_dirname, "src/components/image-select/index.ts"),
          ["component-image-slider"]: resolve(__vite_injected_original_dirname, "src/components/image-slider/index.ts"),
          ["component-image-button"]: resolve(__vite_injected_original_dirname, "src/components/image-button/index.ts"),
          ["component-input"]: resolve(__vite_injected_original_dirname, "src/components/input/index.ts"),
          ["component-input-otp"]: resolve(__vite_injected_original_dirname, "src/components/input-otp/index.ts"),
          ["component-map"]: resolve(__vite_injected_original_dirname, "src/components/map/index.ts"),
          ["component-pagination"]: resolve(__vite_injected_original_dirname, "src/components/pagination/index.ts"),
          ["component-ripple"]: resolve(__vite_injected_original_dirname, "src/components/ripple/index.ts"),
          ["component-select"]: resolve(__vite_injected_original_dirname, "src/components/select/index.ts"),
          ["component-separator"]: resolve(__vite_injected_original_dirname, "src/components/separator/index.ts"),
          ["component-stack"]: resolve(__vite_injected_original_dirname, "src/components/stack/index.ts"),
          ["component-textarea"]: resolve(__vite_injected_original_dirname, "src/components/textarea/index.ts"),
          ["component-toggle"]: resolve(__vite_injected_original_dirname, "src/components/toggle/index.ts"),
          ["component-tooltip"]: resolve(__vite_injected_original_dirname, "src/components/tooltip/index.ts"),
          ["component-typography"]: resolve(__vite_injected_original_dirname, "src/components/typography/index.ts"),
          ["area-outside"]: resolve(__vite_injected_original_dirname, "src/areas/outside/index.ts"),
          ["area-preview"]: resolve(__vite_injected_original_dirname, "src/areas/preview/index.ts"),
          ["area-scroll"]: resolve(__vite_injected_original_dirname, "src/areas/scroll/index.ts"),
          ["area-skeleton"]: resolve(__vite_injected_original_dirname, "src/areas/skeleton/index.ts"),
          ["area-smooth"]: resolve(__vite_injected_original_dirname, "src/areas/smooth/index.ts"),
          ["hooks-use-debounced-callback"]: resolve(__vite_injected_original_dirname, "src/hooks/use-debounced-callback/index.ts"),
          ["hooks-use-deep-compare-memoize"]: resolve(__vite_injected_original_dirname, "src/hooks/use-deep-compare-memoize/index.ts"),
          ["context-app"]: resolve(__vite_injected_original_dirname, "src/contexts/context-app/index.ts"),
          ["context-cookie"]: resolve(__vite_injected_original_dirname, "src/contexts/context-cookie/index.ts"),
          ["context-dialog"]: resolve(__vite_injected_original_dirname, "src/contexts/context-dialog/index.ts"),
          ["context-geolocation"]: resolve(__vite_injected_original_dirname, "src/contexts/context-geolocation/index.ts"),
          ["context-local-storage"]: resolve(__vite_injected_original_dirname, "src/contexts/context-local-storage/index.ts"),
          ["context-permission"]: resolve(__vite_injected_original_dirname, "src/contexts/context-permission/index.ts"),
          ["context-screen-width"]: resolve(__vite_injected_original_dirname, "src/contexts/context-screen-width/index.ts"),
          ["context-sonner"]: resolve(__vite_injected_original_dirname, "src/contexts/context-sonner/index.ts")
        },
        formats: ["es", "cjs"],
        fileName: (format, name) => `${name}.${format}.js`
      },
      rollupOptions: {
        external: Object.keys(peerDependencies),
        output: {
          globals: {
            "styled-components": "styled",
            "styled-reset": "reset",
            react: "React",
            "react-dom": "ReactDOM",
            moment: "moment",
            "react-number-format": "reactNumberFormat",
            "@tanstack/react-virtual": "reactVirtual",
            "js-cookie": "Cookies",
            "@tanstack/react-router": "reactRouter"
          }
        }
      }
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
